[{"C:\\Users\\Dell\\Desktop\\MERN\\react\\memory_game\\src\\components\\Generate.jsx":"1"},{"size":2361,"mtime":1608201468687,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"h85yr5","C:\\Users\\Dell\\Desktop\\MERN\\react\\memory_game\\src\\components\\Generate.jsx",["7"],"import React, { useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport Pokeball from '../images/pokeball.png';\r\n\r\n\r\nconst Generate = (props) => {\r\n\tconst [ amount, setAmount ] = useState(2);\r\n\tconst { cards, setCards,newGame,setLoading} = props;\r\n\t\r\n\tconst [message, setMessage] = useState('')\r\n \r\n\tlet cardsb = [];\r\n\r\n\tconst generate = () => {\r\n\t\tlet idset = 1;\r\n\t\tconst arr = [];\r\n\t\t//prevent same picture appearing more that one time\r\n\t\twhile (arr.length < parseInt(amount)) {\r\n\t\t\tvar r = Math.floor(Math.random() * (151 - 1 + 1) + 1); //Math.floor(Math.random() * (max - min + 1)) + min;\r\n\t\t\tif (arr.indexOf(r) === -1) arr.push(r);\r\n\t\t}\r\n\t\tfor (let i = 1; i <= amount; i++) {\r\n\t\t\tlet card1 = {\r\n\t\t\t\tid: idset++,\r\n\t\t\t\tname: `pic${i}`,\r\n\t\t\t\turl: `https://pokeres.bastionbot.org/images/pokemon/${arr[i - 1]}.png`,\r\n\t\t\t\turl2: `${Pokeball}`,\r\n\t\t\t\tflipped: false,\r\n\t\t\t\tfound: false\r\n\t\t\t};\r\n\r\n\t\t\tlet card2 = {\r\n\t\t\t\tid: idset++,\r\n\t\t\t\tname: `pic${i}`,\r\n\t\t\t\turl: `https://pokeres.bastionbot.org/images/pokemon/${arr[i - 1]}.png`,\r\n\t\t\t\turl2: `${Pokeball}`,\r\n\t\t\t\tflipped: false,\r\n\t\t\t\tfound: false\r\n\t\t\t};\r\n\t\t\tcardsb.push(card1);\r\n\t\t\tcardsb.push(card2);\r\n\t\t}\r\n\t\tsetCards([ cardsb ]);\r\n\t\treturn cardsb;\r\n\t};\r\n\r\n\tconst handleGenerateCards = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif(amount<=3){\r\n\t\t\tsetMessage(\"That's not very challenging..\")\r\n\t\t\tnewGame();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetMessage(\"\")\r\n\t\t\tnewGame();\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetAmount(2)\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetCards(generate().sort(() => Math.random() - 0.5));\r\n\t\t\t\tnavigate(`/play`);\r\n\t\t\t}, 3000);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t<form className=\"form-inline\" onSubmit={handleGenerateCards}>\r\n\t\t\t\t\t<div className=\"form-group form-inline col-auto\">\r\n\t\t\t\t\t\t<label className=\"my-1 mr-2\">Number of cards: </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tclassName=\"form-control mb-2\"\r\n\t\t\t\t\t\t\tonChange={(e) => setAmount(e.target.value)}\r\n\t\t\t\t\t\t\tmin=\"2\"\r\n\t\t\t\t\t\t\tmax=\"50\"\r\n\t\t\t\t\t\t\tvalue={amount}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-auto\">\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-danger mb-2\">\r\n\t\t\t\t\t\t\tGenerate Cards\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t{message!==''&&<p className='text-danger text-center'>{message}</p>}\r\n\t\t\t\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Generate;\r\n",{"ruleId":"8","severity":1,"message":"9","line":8,"column":10,"nodeType":"10","messageId":"11","endLine":8,"endColumn":15},"no-unused-vars","'cards' is assigned a value but never used.","Identifier","unusedVar"]