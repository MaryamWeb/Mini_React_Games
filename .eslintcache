[{"C:\\Users\\Dell\\Desktop\\MERN\\react\\memory_game\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\MERN\\react\\memory_game\\src\\components\\Card.jsx":"2","C:\\Users\\Dell\\Desktop\\MERN\\react\\memory_game\\src\\components\\Generate.jsx":"3","C:\\Users\\Dell\\Desktop\\MERN\\react\\memory_game\\src\\components\\App.jsx":"4","C:\\Users\\Dell\\Desktop\\MERN\\react\\memory_game\\src\\components\\Result.jsx":"5"},{"size":187,"mtime":1608142021461,"results":"6","hashOfConfig":"7"},{"size":2216,"mtime":1608184111928,"results":"8","hashOfConfig":"7"},{"size":2357,"mtime":1608183096404,"results":"9","hashOfConfig":"7"},{"size":1130,"mtime":1608183651571,"results":"10","hashOfConfig":"7"},{"size":1386,"mtime":1608187884449,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"h85yr5",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dell\\Desktop\\MERN\\react\\memory_game\\src\\index.js",[],["25","26"],"C:\\Users\\Dell\\Desktop\\MERN\\react\\memory_game\\src\\components\\Card.jsx",["27","28","29"],"C:\\Users\\Dell\\Desktop\\MERN\\react\\memory_game\\src\\components\\Generate.jsx",["30"],"import React, { useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport Pokeball from '../images/pokeball.png';\r\n\r\n\r\nconst Generate = (props) => {\r\n\tconst [ amount, setAmount ] = useState(1);\r\n\tconst { cards, setCards,newGame } = props;\r\n\tconst [ loading, setLoading ] = useState(false);\r\n \r\n\tlet cardsb = [];\r\n\r\n\tconst generate = () => {\r\n\t\tlet idset = 1;\r\n\t\tconst arr = [];\r\n\t\t//prevent same picture appearing more that one time\r\n\t\twhile (arr.length < parseInt(amount)) {\r\n\t\t\tvar r = Math.floor(Math.random() * (151 - 1 + 1) + 1); //Math.floor(Math.random() * (max - min + 1)) + min;\r\n\t\t\tif (arr.indexOf(r) === -1) arr.push(r);\r\n\t\t}\r\n\t\tfor (let i = 1; i <= amount; i++) {\r\n\t\t\tlet card1 = {\r\n\t\t\t\tid: idset++,\r\n\t\t\t\tname: `pic${i}`,\r\n\t\t\t\turl: `https://pokeres.bastionbot.org/images/pokemon/${arr[i - 1]}.png`,\r\n\t\t\t\turl2: `${Pokeball}`,\r\n\t\t\t\tflipped: false,\r\n\t\t\t\tfound: false\r\n\t\t\t};\r\n\r\n\t\t\tlet card2 = {\r\n\t\t\t\tid: idset++,\r\n\t\t\t\tname: `pic${i}`,\r\n\t\t\t\turl: `https://pokeres.bastionbot.org/images/pokemon/${arr[i - 1]}.png`,\r\n\t\t\t\turl2: `${Pokeball}`,\r\n\t\t\t\tflipped: false,\r\n\t\t\t\tfound: false\r\n\t\t\t};\r\n\t\t\tcardsb.push(card1);\r\n\t\t\tcardsb.push(card2);\r\n\t\t}\r\n\t\tsetCards([ cardsb ]);\r\n\t\treturn cardsb;\r\n\t};\r\n\r\n\tconst handleGenerateCards = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\tnewGame();\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetCards(generate().sort(() => Math.random() - 0.5));\r\n\t\t\tnavigate(`/play`);\r\n\t\t}, 1200);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t<form className=\"form-inline\" onSubmit={handleGenerateCards}>\r\n\t\t\t\t\t<div className=\"form-group form-inline col-auto\">\r\n\t\t\t\t\t\t<label className=\"my-1 mr-2\">Number of cards: </label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tclassName=\"form-control mb-2\"\r\n\t\t\t\t\t\t\tonChange={(e) => setAmount(e.target.value)}\r\n\t\t\t\t\t\t\tmin=\"1\"\r\n\t\t\t\t\t\t\tmax=\"50\"\r\n\t\t\t\t\t\t\tvalue={amount}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-auto\">\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-danger mb-2\">\r\n\t\t\t\t\t\t\tGenerate Cards\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t{loading&& \r\n\t\t\t\t<div className=\"d-flex justify-content-center mt-5 text-danger\" >\r\n\t\t\t\t\t<div className=\"spinner-border\" role=\"status\">\r\n\t\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t\t}\t \r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Generate;\r\n","C:\\Users\\Dell\\Desktop\\MERN\\react\\memory_game\\src\\components\\App.jsx",[],["31","32"],"C:\\Users\\Dell\\Desktop\\MERN\\react\\memory_game\\src\\components\\Result.jsx",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":5,"column":17,"nodeType":"39","messageId":"40","endLine":5,"endColumn":25},{"ruleId":"37","severity":1,"message":"41","line":5,"column":26,"nodeType":"39","messageId":"40","endLine":5,"endColumn":34},{"ruleId":"42","severity":1,"message":"43","line":20,"column":3,"nodeType":"44","endLine":20,"endColumn":16,"suggestions":"45"},{"ruleId":"37","severity":1,"message":"46","line":8,"column":10,"nodeType":"39","messageId":"40","endLine":8,"endColumn":15},{"ruleId":"33","replacedBy":"47"},{"ruleId":"35","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'setCards' is assigned a value but never used.","Identifier","unusedVar","'gameOver' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cards.length', 'checkState', 'flipCount', and 'setGameOver'. Either include them or remove the dependency array.","ArrayExpression",["51"],"'cards' is assigned a value but never used.",["49"],["50"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [cards.length, checkState, flipCount, secondCard, setGameOver]",{"range":"54","text":"55"},[621,634],"[cards.length, checkState, flipCount, secondCard, setGameOver]"]